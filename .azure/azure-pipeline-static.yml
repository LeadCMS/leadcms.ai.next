trigger:
  - main
  - develop

variables:
  - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}: 
    - name: archiveName
      value: "leadcms-ai.zip"
    - name: leadCmsUrl
      value: '$(LEADCMS_URL)'
    - name: leadCmsApiKey
      value: '$(LEADCMS_API_KEY)'
  - ${{ if ne(variables['Build.SourceBranchName'], 'main') }}: 
    - name: archiveName
      value: "leadcms-ai-dev.zip"
    - name: leadCmsUrl
      value: '$(DEV_LEADCMS_URL)'
    - name: leadCmsApiKey
      value: '$(DEV_LEADCMS_API_KEY)'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '24.x'
    displayName: 'Install Node.js'

  - script: |
      npm install
    displayName: 'npm install'

  - script: |
      npm run build
    displayName: 'npm run build'
    env:
      NEXT_PUBLIC_LEADCMS_URL: '$(leadCmsUrl)'
      LEADCMS_API_KEY: '$(leadCmsApiKey)'

  - script: |
      echo User-agent: \* > robots.txt
      echo Disallow: / >> robots.txt
    workingDirectory: out
    displayName: 'disable indexing via robots.txt'
    condition: ne(variables['Build.SourceBranchName'], 'main')

  - script: |
      currentDate=`date`
      echo Build: $(Build.BuildNumber) > build.txt
      echo Date and Time: $currentDate >> build.txt
    workingDirectory: out
    displayName: 'add build.txt'

  - task: ArchiveFiles@2
    displayName: 'Put files into $(archiveName)'
    inputs:
      rootFolderOrFile: 'out'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(archiveName)'
      replaceExistingArchive: true      

  - task: PublishBuildArtifacts@1
    displayName: 'Publish $(archiveName) as build artifact'
    inputs:      
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(archiveName)'
      ArtifactName: 'site'
      publishLocation: 'Container'
